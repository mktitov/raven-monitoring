Цепочки обработки данных

* Что такое цепочка обработки данных?

  Цепочка обратоки данных одна из ключевых функиональностей Raven.
Она позволяет:

  * получить данные от какого-либо источника
  
  * обработать данные
  
  * сохранить или визуализировать обработанные данные
  
  []
  
* Как работает цепочка обработки данных?

  С точки зрения Raven обработка данных заключается в передаче данных от одного узла другому:
  
  * Те узлы которые передают данные называются источниками данных (DataSource).
  
  * Узлы которые получают данные называются получателями (потребителями) данных (DataConsumer)
  
  * Узлы которые одновременно являются DataSource и DataConsumer называются DataPipe. 
    Т.е. узел такого типа получает данные (от DataSource или DataPipe), обрабатывает их, 
    и отправляет, возможно трансформированные данные, своим потребителям (DataConsumer или DataPipe)
    С помощью таких узлов происходит трансформация данных
    
  []
  
  Схематично это можно отобразить следующим образом:
  
  * Строгая схема
  
  \ 
  
[images/data_chains_1.jpeg] Схема обработки данных 1

  \ 
  
  * Более наглядная схема (общая)
  
  \ 
  
[images/data_chains_2.jpeg] Схема обработки данных 2

  \ 
  
  * Схема при которой pipe может передать данные другой цепочке при выполнении определенных условий
  
  \ 
  
[images/data_chains_3.jpeg] Схема обработки данных 3

  \ 
  
  * Схема при которой pipe может инициировать получение данных из другой цепочки. Данные полученные из другой
    цепочки микшируются и отправляются потребителям
  
  \ 
  
[images/data_chains_4.jpeg] Схема обработки данных 4

  \ 
    
  []

* Как запускается процесс обработки данных?

  В Raven используется 3 схемы инициации обработки данных в цепочке:
  
  * В первом случае инициатором является DataSource
  
  \ 
  
[images/data_chains_5.jpeg] Схема обработки данных 5

  \ 
    
  * Во втором случае инициатором является DataConsumer. Отличием от первой тем, что пересылка данных идет 
    адресно запрощику данных (т.е. данные движутся только по направлению к запрощику данных)
  
  \ 
  
[images/data_chains_6.jpeg] Схема обработки данных 6

  \ 
    
  * Третий случай интересный, но вполне с предсказуемым поведением. Здесь инициатором является DataPipe 
  
  \ 
  
[images/data_chains_7.jpeg] Схема обработки данных 7

  \ 
    
  
  
  